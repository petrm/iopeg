# Hierarchical syntax
IoPEG      <- Spacing Definition+ EndOfFile
Definition <- Identifier Spacing LEFTARROW Expression
Expression <- Primary+ (SLASH Primary+)*
Primary    <- Prefix?
              (
                Identifier Spacing !LEFTARROW
                / OPEN Expression CLOSE
                / Regex / Literal / Class / DOT
              )
              Suffix?
              Semantics?
Prefix     <- AND / NOT / Label
Label      <- Identifier ':'
Suffix     <- QUESTION / STAR / PLUS
Semantics  <- Mixin / RawCode
Mixin      <- '<' (Identifier Spacing)+ '>' Spacing
RawCode    <- OPENCURL IoCode CLOSECURL

# Lexical syntax
Identifier <- IdentStart IdentCont*
IdentStart <- [a-zA-Z_]
IdentCont  <- IdentStart / [0-9]
Regex      <- '`' ( '\\`' / !'`' . )+ '`' Spacing
Literal    <- ['] (!['] Char)* ['] Spacing
              / ["] (!["] Char)* ["] Spacing

Class      <- '[' (!']' Range)* ']' Spacing
Range      <- Char '-' Char / Char
Char       <- '\\' [nrt'"\[\]\\]
              / '\\' [0-2] [0-7] [0-7]
              / '\\' [0-7] [0-7]?
              / !'\\' .
LEFTARROW  <- '<-' Spacing
SLASH      <- '/' Spacing
AND        <- '&' Spacing
NOT        <- '!' Spacing
QUESTION   <- '?' Spacing
STAR       <- '*' Spacing
PLUS       <- '+' Spacing
OPEN       <- '(' Spacing
CLOSE      <- ')' Spacing
OPENCURL   <- '{' Spacing
CLOSECURL  <- '}' Spacing
DOT        <- '.' Spacing
Spacing    <- (Space / Comment)*
Comment    <- '#' (!EndOfLine .)* EndOfLine
Space      <- ' ' / '\t' / EndOfLine
EndOfLine  <- '\r\n' / '\n' / '\r'
EndOfFile  <- !.

# Io code
# TODO: acual Io PEG here
IoCode     <- (!'}' .)+