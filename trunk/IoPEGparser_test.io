IoPEGParser

TestPEGParser := UnitTest clone do(  
  test1_parsing := method(
    assertParses( File with( "IoPEG.peg" ) contents )
    assertParses( File with( "eng.peg" ) contents )
  )
  
  assertParses := method( str,
    assertNotNil( IoPEGParser parse( str ) )
  )
  
  assertParseFailure := method( str,
    assertRaisesException( IoPEGParser parse( str ) )
  )
)
TestPEGParser run

#=> IoPEGParser parse( File with( "IoPEG.peg" ) contents ) showTree
#=> 
#=> <Grammar 23..1252 "Grammar    <- Spacing Definition+ EndOfFile\r\nDefinition <- Identifier LEFTARROW Expression\r\nExpression <- Primary+ (SLASH Primary+)*\r\nPrimary    <- (AND / NOT)?\r\n              (\r\n                Identifier !LEFTARROW\r\n                / OPEN Expression CLOSE\r\n                / Literal / Class / DOT\r\n              )\r\n              (QUESTION / STAR / PLUS)?\r\n\r\n# Lexical syntax\r\nIdentifier <- IdentStart IdentCont* Spacing\r\nIdentStart <- [a-zA-Z_]\r\nIdentCont  <- IdentStart / [0-9]\r\nLiteral    <- ['] (!['] Char)* ['] Spacing\r\n              / [\"] (![\"] Char)* [\"] Spacing\r\n\r\nClass      <- '[' (!']' Range)* ']' Spacing\r\nRange      <- Char '-' Char / Char\r\nChar       <- '\\\\' [nrt'\"\\[\\]\\\\]\r\n              / '\\\\' [0-2] [0-7] [0-7]\r\n              / '\\\\' [0-7] [0-7]?\r\n              / !'\\\\' .\r\nLEFTARROW  <- '<-' Spacing\r\nSLASH      <- '/' Spacing\r\nAND        <- '&' Spacing\r\nNOT        <- '!' Spacing\r\nQUESTION   <- '?' Spacing\r\nSTAR       <- '*' Spacing\r\nPLUS       <- '+' Spacing\r\nOPEN       <- '(' Spacing\r\nCLOSE      <- ')' Spacing\r\nDOT        <- '.' Spacing\r\nSpacing    <- (Space / Comment)*\r\nComment    <- '#' (!EndOfLine .)* EndOfLine\r\nSpace      <- ' ' / '\\t' / EndOfLine\r\nEndOfLine  <- '\\r\\n' / '\\n' / '\\r'\r\nEndOfFile  <- !.">
#=>   <Definition 23..66 "Grammar    <- Spacing Definition+ EndOfFile">
#=>     <Production 23..30 "Grammar">
#=>     <Expression 37..66 "Spacing Definition+ EndOfFile">
#=>       <Sequence 37..66 "Spacing Definition+ EndOfFile">
#=>         <Primary 37..44 "Spacing">
#=>           <NonTerminal 37..44 "Spacing">
#=>         <Primary 45..56 "Definition+">
#=>           <NonTerminal 45..55 "Definition">
#=>           <Suffix 55..56 "+">
#=>         <Primary 57..66 "EndOfFile">
#=>           <NonTerminal 57..66 "EndOfFile">
#=>   <Definition 68..113 "Definition <- Identifier LEFTARROW Expression">
#=>     <Production 68..78 "Definition">
#=>     <Expression 82..113 "Identifier LEFTARROW Expression">
#=>       <Sequence 82..113 "Identifier LEFTARROW Expression">
#=>         <Primary 82..92 "Identifier">
#=>           <NonTerminal 82..92 "Identifier">
#=>         <Primary 93..102 "LEFTARROW">
#=>           <NonTerminal 93..102 "LEFTARROW">
#=>         <Primary 103..113 "Expression">
#=>           <NonTerminal 103..113 "Expression">
#=>   <Definition 115..155 "Expression <- Primary+ (SLASH Primary+)*">
#=>     <Production 115..125 "Expression">
#=>     <Expression 129..155 "Primary+ (SLASH Primary+)*">
#=>       <Sequence 129..155 "Primary+ (SLASH Primary+)*">
#=>         <Primary 129..137 "Primary+">
#=>           <NonTerminal 129..136 "Primary">
#=>           <Suffix 136..137 "+">
#=>         <Primary 139..155 "SLASH Primary+)*">
#=>           <Group 139..153 "SLASH Primary+">
#=>             <Expression 139..153 "SLASH Primary+">
#=>               <Sequence 139..153 "SLASH Primary+">
#=>                 <Primary 139..144 "SLASH">
#=>                   <NonTerminal 139..144 "SLASH">
#=>                 <Primary 145..153 "Primary+">
#=>                   <NonTerminal 145..152 "Primary">
#=>                   <Suffix 152..153 "+">
#=>           <Suffix 154..155 "*">
#=>   <Definition 157..379 "Primary    <- (AND / NOT)?\r\n              (\r\n                Identifier !LEFTARROW\r\n                / OPEN Expression CLOSE\r\n                / Literal / Class / DOT\r\n              )\r\n              (QUESTION / STAR / PLUS)?">
#=>     <Production 157..164 "Primary">
#=>     <Expression 172..379 "AND / NOT)?\r\n              (\r\n                Identifier !LEFTARROW\r\n                / OPEN Expression CLOSE\r\n                / Literal / Class / DOT\r\n              )\r\n              (QUESTION / STAR / PLUS)?">
#=>       <Sequence 172..379 "AND / NOT)?\r\n              (\r\n                Identifier !LEFTARROW\r\n                / OPEN Expression CLOSE\r\n                / Literal / Class / DOT\r\n              )\r\n              (QUESTION / STAR / PLUS)?">
#=>         <Primary 172..183 "AND / NOT)?">
#=>           <Group 172..181 "AND / NOT">
#=>             <Expression 172..181 "AND / NOT">
#=>               <Sequence 172..175 "AND">
#=>                 <Primary 172..175 "AND">
#=>                   <NonTerminal 172..175 "AND">
#=>               <Sequence 178..181 "NOT">
#=>                 <Primary 178..181 "NOT">
#=>                   <NonTerminal 178..181 "NOT">
#=>           <Suffix 182..183 "?">
#=>         <Primary 218..321 "Identifier !LEFTARROW\r\n                / OPEN Expression CLOSE\r\n                / Literal / Class / DOT">
#=>           <Group 218..321 "Identifier !LEFTARROW\r\n                / OPEN Expression CLOSE\r\n                / Literal / Class / DOT">
#=>             <Expression 218..321 "Identifier !LEFTARROW\r\n                / OPEN Expression CLOSE\r\n                / Literal / Class / DOT">
#=>               <Sequence 218..239 "Identifier !LEFTARROW">
#=>                 <Primary 218..228 "Identifier">
#=>                   <NonTerminal 218..228 "Identifier">
#=>                 <Primary 229..239 "!LEFTARROW">
#=>                   <Prefix 229..230 "!">
#=>                   <NonTerminal 230..239 "LEFTARROW">
#=>               <Sequence 259..280 "OPEN Expression CLOSE">
#=>                 <Primary 259..263 "OPEN">
#=>                   <NonTerminal 259..263 "OPEN">
#=>                 <Primary 264..274 "Expression">
#=>                   <NonTerminal 264..274 "Expression">
#=>                 <Primary 275..280 "CLOSE">
#=>                   <NonTerminal 275..280 "CLOSE">
#=>               <Sequence 300..307 "Literal">
#=>                 <Primary 300..307 "Literal">
#=>                   <NonTerminal 300..307 "Literal">
#=>               <Sequence 310..315 "Class">
#=>                 <Primary 310..315 "Class">
#=>                   <NonTerminal 310..315 "Class">
#=>               <Sequence 318..321 "DOT">
#=>                 <Primary 318..321 "DOT">
#=>                   <NonTerminal 318..321 "DOT">
#=>         <Primary 355..379 "QUESTION / STAR / PLUS)?">
#=>           <Group 355..377 "QUESTION / STAR / PLUS">
#=>             <Expression 355..377 "QUESTION / STAR / PLUS">
#=>               <Sequence 355..363 "QUESTION">
#=>                 <Primary 355..363 "QUESTION">
#=>                   <NonTerminal 355..363 "QUESTION">
#=>               <Sequence 366..370 "STAR">
#=>                 <Primary 366..370 "STAR">
#=>                   <NonTerminal 366..370 "STAR">
#=>               <Sequence 373..377 "PLUS">
#=>                 <Primary 373..377 "PLUS">
#=>                   <NonTerminal 373..377 "PLUS">
#=>           <Suffix 378..379 "?">
#=>   <Definition 401..444 "Identifier <- IdentStart IdentCont* Spacing">
#=>     <Production 401..411 "Identifier">
#=>     <Expression 415..444 "IdentStart IdentCont* Spacing">
#=>       <Sequence 415..444 "IdentStart IdentCont* Spacing">
#=>         <Primary 415..425 "IdentStart">
#=>           <NonTerminal 415..425 "IdentStart">
#=>         <Primary 426..436 "IdentCont*">
#=>           <NonTerminal 426..435 "IdentCont">
#=>           <Suffix 435..436 "*">
#=>         <Primary 437..444 "Spacing">
#=>           <NonTerminal 437..444 "Spacing">
#=>   <Definition 446..468 "IdentStart <- [a-zA-Z_">
#=>     <Production 446..456 "IdentStart">
#=>     <Expression 461..468 "a-zA-Z_">
#=>       <Sequence 461..468 "a-zA-Z_">
#=>         <Primary 461..468 "a-zA-Z_">
#=>           <CLASS 461..468 "a-zA-Z_">
#=>   <Definition 471..502 "IdentCont  <- IdentStart / [0-9">
#=>     <Production 471..480 "IdentCont">
#=>     <Expression 485..502 "IdentStart / [0-9">
#=>       <Sequence 485..495 "IdentStart">
#=>         <Primary 485..495 "IdentStart">
#=>           <NonTerminal 485..495 "IdentStart">
#=>       <Sequence 499..502 "0-9">
#=>         <Primary 499..502 "0-9">
#=>           <CLASS 499..502 "0-9">
#=>   <Definition 505..593 "Literal    <- ['] (!['] Char)* ['] Spacing\r\n              / [\"] (![\"] Char)* [\"] Spacing">
#=>     <Production 505..512 "Literal">
#=>     <Expression 520..593 "'] (!['] Char)* ['] Spacing\r\n              / [\"] (![\"] Char)* [\"] Spacing">
#=>       <Sequence 520..547 "'] (!['] Char)* ['] Spacing">
#=>         <Primary 520..521 "'">
#=>           <CLASS 520..521 "'">
#=>         <Primary 524..535 "!['] Char)*">
#=>           <Group 524..533 "!['] Char">
#=>             <Expression 524..533 "!['] Char">
#=>               <Sequence 524..533 "!['] Char">
#=>                 <Primary 524..527 "!['">
#=>                   <Prefix 524..525 "!">
#=>                   <CLASS 526..527 "'">
#=>                 <Primary 529..533 "Char">
#=>                   <NonTerminal 529..533 "Char">
#=>           <Suffix 534..535 "*">
#=>         <Primary 537..538 "'">
#=>           <CLASS 537..538 "'">
#=>         <Primary 540..547 "Spacing">
#=>           <NonTerminal 540..547 "Spacing">
#=>       <Sequence 566..593 "\"] (![\"] Char)* [\"] Spacing">
#=>         <Primary 566..567 "\"">
#=>           <CLASS 566..567 "\"">
#=>         <Primary 570..581 "![\"] Char)*">
#=>           <Group 570..579 "![\"] Char">
#=>             <Expression 570..579 "![\"] Char">
#=>               <Sequence 570..579 "![\"] Char">
#=>                 <Primary 570..573 "![\"">
#=>                   <Prefix 570..571 "!">
#=>                   <CLASS 572..573 "\"">
#=>                 <Primary 575..579 "Char">
#=>                   <NonTerminal 575..579 "Char">
#=>           <Suffix 580..581 "*">
#=>         <Primary 583..584 "\"">
#=>           <CLASS 583..584 "\"">
#=>         <Primary 586..593 "Spacing">
#=>           <NonTerminal 586..593 "Spacing">
#=>   <Definition 597..640 "Class      <- '[' (!']' Range)* ']' Spacing">
#=>     <Production 597..602 "Class">
#=>     <Expression 612..640 "[' (!']' Range)* ']' Spacing">
#=>       <Sequence 612..640 "[' (!']' Range)* ']' Spacing">
#=>         <Primary 612..613 "[">
#=>           <LITERAL 612..613 "[">
#=>         <Primary 616..628 "!']' Range)*">
#=>           <Group 616..626 "!']' Range">
#=>             <Expression 616..626 "!']' Range">
#=>               <Sequence 616..626 "!']' Range">
#=>                 <Primary 616..619 "!']">
#=>                   <Prefix 616..617 "!">
#=>                   <LITERAL 618..619 "]">
#=>                 <Primary 621..626 "Range">
#=>                   <NonTerminal 621..626 "Range">
#=>           <Suffix 627..628 "*">
#=>         <Primary 630..631 "]">
#=>           <LITERAL 630..631 "]">
#=>         <Primary 633..640 "Spacing">
#=>           <NonTerminal 633..640 "Spacing">
#=>   <Definition 642..676 "Range      <- Char '-' Char / Char">
#=>     <Production 642..647 "Range">
#=>     <Expression 656..676 "Char '-' Char / Char">
#=>       <Sequence 656..669 "Char '-' Char">
#=>         <Primary 656..660 "Char">
#=>           <NonTerminal 656..660 "Char">
#=>         <Primary 662..663 "-">
#=>           <LITERAL 662..663 "-">
#=>         <Primary 665..669 "Char">
#=>           <NonTerminal 665..669 "Char">
#=>       <Sequence 672..676 "Char">
#=>         <Primary 672..676 "Char">
#=>           <NonTerminal 672..676 "Char">
#=>   <Definition 678..810 "Char       <- '\\\\' [nrt'\"\\[\\]\\\\]\r\n              / '\\\\' [0-2] [0-7] [0-7]\r\n              / '\\\\' [0-7] [0-7]?\r\n              / !'\\\\' .">
#=>     <Production 678..682 "Char">
#=>     <Expression 693..810 "\\\\' [nrt'\"\\[\\]\\\\]\r\n              / '\\\\' [0-2] [0-7] [0-7]\r\n              / '\\\\' [0-7] [0-7]?\r\n              / !'\\\\' .">
#=>       <Sequence 693..709 "\\\\' [nrt'\"\\[\\]\\\\">
#=>         <Primary 693..695 "\\\\">
#=>           <LITERAL 693..695 "\\\\">
#=>         <Primary 698..709 "nrt'\"\\[\\]\\\\">
#=>           <CLASS 698..709 "nrt'\"\\[\\]\\\\">
#=>       <Sequence 729..749 "\\\\' [0-2] [0-7] [0-7">
#=>         <Primary 729..731 "\\\\">
#=>           <LITERAL 729..731 "\\\\">
#=>         <Primary 734..737 "0-2">
#=>           <CLASS 734..737 "0-2">
#=>         <Primary 740..743 "0-7">
#=>           <CLASS 740..743 "0-7">
#=>         <Primary 746..749 "0-7">
#=>           <CLASS 746..749 "0-7">
#=>       <Sequence 769..785 "\\\\' [0-7] [0-7]?">
#=>         <Primary 769..771 "\\\\">
#=>           <LITERAL 769..771 "\\\\">
#=>         <Primary 774..777 "0-7">
#=>           <CLASS 774..777 "0-7">
#=>         <Primary 780..785 "0-7]?">
#=>           <CLASS 780..783 "0-7">
#=>           <Suffix 784..785 "?">
#=>       <Sequence 803..810 "!'\\\\' .">
#=>         <Primary 803..807 "!'\\\\">
#=>           <Prefix 803..804 "!">
#=>           <LITERAL 805..807 "\\\\">
#=>         <Primary 809..810 ".">
#=>           <ANY 809..810 ".">
#=>   <Definition 812..838 "LEFTARROW  <- '<-' Spacing">
#=>     <Production 812..821 "LEFTARROW">
#=>     <Expression 827..838 "<-' Spacing">
#=>       <Sequence 827..838 "<-' Spacing">
#=>         <Primary 827..829 "<-">
#=>           <LITERAL 827..829 "<-">
#=>         <Primary 831..838 "Spacing">
#=>           <NonTerminal 831..838 "Spacing">
#=>   <Definition 840..865 "SLASH      <- '/' Spacing">
#=>     <Production 840..845 "SLASH">
#=>     <Expression 855..865 "/' Spacing">
#=>       <Sequence 855..865 "/' Spacing">
#=>         <Primary 855..856 "/">
#=>           <LITERAL 855..856 "/">
#=>         <Primary 858..865 "Spacing">
#=>           <NonTerminal 858..865 "Spacing">
#=>   <Definition 867..892 "AND        <- '&' Spacing">
#=>     <Production 867..870 "AND">
#=>     <Expression 882..892 "&' Spacing">
#=>       <Sequence 882..892 "&' Spacing">
#=>         <Primary 882..883 "&">
#=>           <LITERAL 882..883 "&">
#=>         <Primary 885..892 "Spacing">
#=>           <NonTerminal 885..892 "Spacing">
#=>   <Definition 894..919 "NOT        <- '!' Spacing">
#=>     <Production 894..897 "NOT">
#=>     <Expression 909..919 "!' Spacing">
#=>       <Sequence 909..919 "!' Spacing">
#=>         <Primary 909..910 "!">
#=>           <LITERAL 909..910 "!">
#=>         <Primary 912..919 "Spacing">
#=>           <NonTerminal 912..919 "Spacing">
#=>   <Definition 921..946 "QUESTION   <- '?' Spacing">
#=>     <Production 921..929 "QUESTION">
#=>     <Expression 936..946 "?' Spacing">
#=>       <Sequence 936..946 "?' Spacing">
#=>         <Primary 936..937 "?">
#=>           <LITERAL 936..937 "?">
#=>         <Primary 939..946 "Spacing">
#=>           <NonTerminal 939..946 "Spacing">
#=>   <Definition 948..973 "STAR       <- '*' Spacing">
#=>     <Production 948..952 "STAR">
#=>     <Expression 963..973 "*' Spacing">
#=>       <Sequence 963..973 "*' Spacing">
#=>         <Primary 963..964 "*">
#=>           <LITERAL 963..964 "*">
#=>         <Primary 966..973 "Spacing">
#=>           <NonTerminal 966..973 "Spacing">
#=>   <Definition 975..1000 "PLUS       <- '+' Spacing">
#=>     <Production 975..979 "PLUS">
#=>     <Expression 990..1000 "+' Spacing">
#=>       <Sequence 990..1000 "+' Spacing">
#=>         <Primary 990..991 "+">
#=>           <LITERAL 990..991 "+">
#=>         <Primary 993..1000 "Spacing">
#=>           <NonTerminal 993..1000 "Spacing">
#=>   <Definition 1002..1027 "OPEN       <- '(' Spacing">
#=>     <Production 1002..1006 "OPEN">
#=>     <Expression 1017..1027 "(' Spacing">
#=>       <Sequence 1017..1027 "(' Spacing">
#=>         <Primary 1017..1018 "(">
#=>           <LITERAL 1017..1018 "(">
#=>         <Primary 1020..1027 "Spacing">
#=>           <NonTerminal 1020..1027 "Spacing">
#=>   <Definition 1029..1054 "CLOSE      <- ')' Spacing">
#=>     <Production 1029..1034 "CLOSE">
#=>     <Expression 1044..1054 ")' Spacing">
#=>       <Sequence 1044..1054 ")' Spacing">
#=>         <Primary 1044..1045 ")">
#=>           <LITERAL 1044..1045 ")">
#=>         <Primary 1047..1054 "Spacing">
#=>           <NonTerminal 1047..1054 "Spacing">
#=>   <Definition 1056..1081 "DOT        <- '.' Spacing">
#=>     <Production 1056..1059 "DOT">
#=>     <Expression 1071..1081 ".' Spacing">
#=>       <Sequence 1071..1081 ".' Spacing">
#=>         <Primary 1071..1072 ".">
#=>           <LITERAL 1071..1072 ".">
#=>         <Primary 1074..1081 "Spacing">
#=>           <NonTerminal 1074..1081 "Spacing">
#=>   <Definition 1083..1115 "Spacing    <- (Space / Comment)*">
#=>     <Production 1083..1090 "Spacing">
#=>     <Expression 1098..1115 "Space / Comment)*">
#=>       <Sequence 1098..1115 "Space / Comment)*">
#=>         <Primary 1098..1115 "Space / Comment)*">
#=>           <Group 1098..1113 "Space / Comment">
#=>             <Expression 1098..1113 "Space / Comment">
#=>               <Sequence 1098..1103 "Space">
#=>                 <Primary 1098..1103 "Space">
#=>                   <NonTerminal 1098..1103 "Space">
#=>               <Sequence 1106..1113 "Comment">
#=>                 <Primary 1106..1113 "Comment">
#=>                   <NonTerminal 1106..1113 "Comment">
#=>           <Suffix 1114..1115 "*">
#=>   <Definition 1117..1160 "Comment    <- '#' (!EndOfLine .)* EndOfLine">
#=>     <Production 1117..1124 "Comment">
#=>     <Expression 1132..1160 "#' (!EndOfLine .)* EndOfLine">
#=>       <Sequence 1132..1160 "#' (!EndOfLine .)* EndOfLine">
#=>         <Primary 1132..1133 "#">
#=>           <LITERAL 1132..1133 "#">
#=>         <Primary 1136..1150 "!EndOfLine .)*">
#=>           <Group 1136..1148 "!EndOfLine .">
#=>             <Expression 1136..1148 "!EndOfLine .">
#=>               <Sequence 1136..1148 "!EndOfLine .">
#=>                 <Primary 1136..1146 "!EndOfLine">
#=>                   <Prefix 1136..1137 "!">
#=>                   <NonTerminal 1137..1146 "EndOfLine">
#=>                 <Primary 1147..1148 ".">
#=>                   <ANY 1147..1148 ".">
#=>           <Suffix 1149..1150 "*">
#=>         <Primary 1151..1160 "EndOfLine">
#=>           <NonTerminal 1151..1160 "EndOfLine">
#=>   <Definition 1162..1198 "Space      <- ' ' / '\\t' / EndOfLine">
#=>     <Production 1162..1167 "Space">
#=>     <Expression 1177..1198 " ' / '\\t' / EndOfLine">
#=>       <Sequence 1177..1178 " ">
#=>         <Primary 1177..1178 " ">
#=>           <LITERAL 1177..1178 " ">
#=>       <Sequence 1183..1185 "\\t">
#=>         <Primary 1183..1185 "\\t">
#=>           <LITERAL 1183..1185 "\\t">
#=>       <Sequence 1189..1198 "EndOfLine">
#=>         <Primary 1189..1198 "EndOfLine">
#=>           <NonTerminal 1189..1198 "EndOfLine">
#=>   <Definition 1200..1233 "EndOfLine  <- '\\r\\n' / '\\n' / '\\r">
#=>     <Production 1200..1209 "EndOfLine">
#=>     <Expression 1215..1233 "\\r\\n' / '\\n' / '\\r">
#=>       <Sequence 1215..1219 "\\r\\n">
#=>         <Primary 1215..1219 "\\r\\n">
#=>           <LITERAL 1215..1219 "\\r\\n">
#=>       <Sequence 1224..1226 "\\n">
#=>         <Primary 1224..1226 "\\n">
#=>           <LITERAL 1224..1226 "\\n">
#=>       <Sequence 1231..1233 "\\r">
#=>         <Primary 1231..1233 "\\r">
#=>           <LITERAL 1231..1233 "\\r">
#=>   <Definition 1236..1252 "EndOfFile  <- !.">
#=>     <Production 1236..1245 "EndOfFile">
#=>     <Expression 1250..1252 "!.">
#=>       <Sequence 1250..1252 "!.">
#=>         <Primary 1250..1252 "!.">
#=>           <Prefix 1250..1251 "!">
#=>           <ANY 1251..1252 ".">
